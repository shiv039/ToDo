{"version":3,"sources":["components/Header/TaskCounter/TaskCounter.js","components/Header/Header.js","components/TaskAdd/TaskAdd.js","components/TaskList/TaskList.js","components/Task.js","App.js","fontawesome.js","index.js"],"names":["TaskCounter","tasks","text","className","taskCounterClass","classNames","length","Header","completedTasks","clearTasks","filter","task","done","remainingTasks","TaskAdd","addTaskName","taskName","addTask","onSubmit","onChange","placeholder","type","value","TaskList","removeTask","completeTask","emptyList","icon","filledList","map","taskClass","onClick","name","id","Tasks","state","buildTask","taskNameHandler","e","setState","currentTarget","addTaskHandler","preventDefault","prevState","removeTaskHandler","filteredTasks","completeTaskHandler","prevTask","concat","clearTasksHandler","uuidv4","this","Component","App","library","add","faCheckCircle","faCircle","faEllipsisV","faExclamationTriangle","faTrashAlt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e50c65de.chunk.js","sourcesContent":["import React from 'react'\r\nimport classNames from 'classnames';\r\n\r\nimport './TaskCounter.css'\r\n\r\nconst TaskCounter = ({tasks, text, className}) => {\r\n  const taskCounterClass = classNames(\"taskCounter\", className)\r\n\r\n  if (tasks.length > 0) {\r\n    return (\r\n      <p className={taskCounterClass}>\r\n        {tasks.length} {tasks.length === 1 ? 'task' : 'tasks'} {text}\r\n      </p>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default TaskCounter\r\n","import React from 'react'\r\nimport TaskCounter from './TaskCounter/TaskCounter'\r\nimport \"./Header.css\"\r\n\r\n\r\nconst Header = ({tasks, clearTasks}) => {\r\n  const completedTasks = tasks.filter(task => task.done === true)\r\n  const remainingTasks = tasks.filter(task => task.done === false)\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"title\">To Do</h1>\r\n\r\n      <div className=\"taskInfo\">\r\n        <TaskCounter\r\n          className=\"remaining\"\r\n          tasks={remainingTasks}\r\n          text=\"remaining\"\r\n        />\r\n        <TaskCounter\r\n          tasks={completedTasks}\r\n          text=\"completed\"\r\n        />\r\n      </div>\r\n\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './TaskAdd.css'\r\n\r\nconst TaskAdd = ({addTaskName, taskName, addTask}) => (\r\n  <form className=\"taskAdd\" onSubmit={addTask}>\r\n    <input\r\n      className=\"input\"\r\n      onChange={addTaskName}\r\n      placeholder=\"Type your task\"\r\n      type=\"text\"\r\n      value={taskName}\r\n    />\r\n\r\n    <button className=\"button\">\r\n      Add\r\n    </button>\r\n  </form>\r\n)\r\n\r\nexport default TaskAdd\r\n","import React from 'react'\r\nimport classNames from 'classnames'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport  './TaskList.css'\r\n\r\nconst TaskList = ({tasks, removeTask, completeTask}) => {\r\n  const emptyList = (\r\n      <p className=\"emptyList\">\r\n        <FontAwesomeIcon\r\n          icon=\"exclamation-triangle\"\r\n          className=\"emptyListIcon\"\r\n        />\r\n        You don't have any task\r\n      </p>\r\n  )\r\n\r\n  const filledList = (\r\n    <ul className=\"list\">\r\n      {tasks.map(task => {\r\n        const taskClass = classNames(\"task\", { \"done\": task.done })\r\n\r\n        return (\r\n          <li className={taskClass} key={task.id}>\r\n            <div className=\"taskInfo\">\r\n              <button\r\n                className=\"completeButton\"\r\n                onClick={() => completeTask(task)}\r\n                type=\"button\"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={task.done ? 'check-circle' : ['far', 'circle']}\r\n                />\r\n              </button>\r\n\r\n              <p className=\"taskName\">\r\n                {task.name}\r\n              </p>\r\n            </div>\r\n\r\n\r\n            <button\r\n              className=\"deleteButton\"\r\n              onClick={() => removeTask(task.id)}\r\n              type='button'\r\n            >\r\n              <FontAwesomeIcon icon=\"trash-alt\" />\r\n            </button>\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n\r\n  if (tasks.length === 0) {\r\n    return emptyList\r\n  } else {\r\n    return filledList\r\n  }\r\n}\r\n\r\nexport default TaskList\r\n","import React, { Component } from 'react'\r\nimport Header from './Header/Header'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport TaskAdd from './TaskAdd/TaskAdd'\r\nimport TaskList from './TaskList/TaskList';\r\nimport './Task.css'\r\n\r\nclass Tasks extends Component {\r\n  state = {\r\n    tasks: [\r\n      this.buildTask('Make coffee'),\r\n      this.buildTask('Code'),\r\n      this.buildTask('Sleep'),\r\n      this.buildTask('Repeat'),\r\n    ],\r\n    taskName: ''\r\n  }\r\n\r\n  buildTask(name) {\r\n    return { id: uuidv4(), name, done: false }\r\n  }\r\n\r\n  taskNameHandler = (e) => {\r\n    this.setState({taskName: e.currentTarget.value})\r\n  }\r\n\r\n  addTaskHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    this.setState(prevState => ({\r\n      tasks: [\r\n        ...prevState.tasks,\r\n        this.buildTask(this.state.taskName)\r\n      ],\r\n\r\n      taskName: ''\r\n    }))\r\n  }\r\n\r\n  removeTaskHandler = (id) => {\r\n    let filteredTasks = this.state.tasks.filter(task => task.id !== id)\r\n\r\n    this.setState({tasks: filteredTasks})\r\n  }\r\n\r\n  completeTaskHandler = (task) => {\r\n    task.done = !task.done\r\n\r\n    this.setState(prevState => ({\r\n      tasks: prevState.tasks.filter(prevTask => prevTask.id !== task.id)\r\n        .concat([task])\r\n    }))\r\n  }\r\n\r\n  clearTasksHandler = () => {\r\n    this.setState({tasks: []})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tasks\">\r\n        <Header\r\n          tasks={this.state.tasks}\r\n          clearTasks={this.clearTasksHandler}\r\n        />\r\n\r\n        <TaskAdd\r\n          addTask={this.addTaskHandler}\r\n          addTaskName={this.taskNameHandler}\r\n          taskName={this.state.taskName}\r\n        />\r\n\r\n        <TaskList\r\n          tasks={this.state.tasks}\r\n          removeTask={this.removeTaskHandler}\r\n          completeTask={this.completeTaskHandler}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tasks\r\n","import React from 'react';\nimport Tasks from './components/Task';\n\nconst App = () => <Tasks />\n\nexport default App;\n","import { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faCircle } from '@fortawesome/free-regular-svg-icons'\r\nimport {\r\n  faCheckCircle,\r\n  faEllipsisV,\r\n  faExclamationTriangle,\r\n  faTrashAlt,\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(\r\n  faCheckCircle,\r\n  faCircle,\r\n  faEllipsisV,\r\n  faExclamationTriangle,\r\n  faTrashAlt\r\n)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport './fontawesome'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}